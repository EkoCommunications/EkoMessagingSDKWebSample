const webpack = require('webpack');
const path = require('path');

const libraryName = 'flobx';
const fileName = 'client';
const outputFile = `${fileName}.js`;

const config = {
  entry: __dirname + '/src/index.js',
  mode: 'production',
  devtool: 'source-map',
  output: {
    path: __dirname + '/lib',
    filename: outputFile,
    library: libraryName,
    libraryTarget: 'umd',
    umdNamedDefine: true,
    globalObject: 'typeof self !== \'undefined\' ? self : this',
  },
  module: {
    rules: [
      {
        test: /(\.jsx|\.js)$/,
        loader: 'babel-loader',
        exclude: /node_modules/
      },
      /*{
        test: /(\.jsx|\.js)$/,
        loader: 'eslint-loader',
        exclude: /node_modules/
      }*/
    ]
  },
  resolve: {
    modules: [ 'node_modules' ],
    extensions: [ '.json', '.js' ]
  },
  externals: {
    mobx: {
      commonjs: 'mobx',
      commonjs2:'mobx',
      amd: 'mobx',
      root: 'mobx',
    },
    lodash: {
      commonjs: 'lodash',
      commonjs2:'lodash',
      amd: 'lodash',
      root: '_',
    },
  },
  node: {
    // set empty objects for node native modules that some libs use
    fs: 'empty',
    net: 'empty',
    dns: 'empty',
  },
};

module.exports = config;
